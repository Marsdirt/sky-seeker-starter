{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/sky-seeker-starter/src/data/states.ts"],"sourcesContent":["export const STATES = [\r\n  { name: \"Alabama\", abbr: \"AL\" },\r\n  { name: \"Alaska\", abbr: \"AK\" },\r\n  { name: \"Arizona\", abbr: \"AZ\" },\r\n  { name: \"Arkansas\", abbr: \"AR\" },\r\n  { name: \"California\", abbr: \"CA\" },\r\n  { name: \"Colorado\", abbr: \"CO\" },\r\n  { name: \"Connecticut\", abbr: \"CT\" },\r\n  { name: \"Delaware\", abbr: \"DE\" },\r\n  { name: \"Florida\", abbr: \"FL\" },\r\n  { name: \"Georgia\", abbr: \"GA\" },\r\n  { name: \"Hawaii\", abbr: \"HI\" },\r\n  { name: \"Idaho\", abbr: \"ID\" },\r\n  { name: \"Illinois\", abbr: \"IL\" },\r\n  { name: \"Indiana\", abbr: \"IN\" },\r\n  { name: \"Iowa\", abbr: \"IA\" },\r\n  { name: \"Kansas\", abbr: \"KS\" },\r\n  { name: \"Kentucky\", abbr: \"KY\" },\r\n  { name: \"Louisiana\", abbr: \"LA\" },\r\n  { name: \"Maine\", abbr: \"ME\" },\r\n  { name: \"Maryland\", abbr: \"MD\" },\r\n  { name: \"Massachusetts\", abbr: \"MA\" },\r\n  { name: \"Michigan\", abbr: \"MI\" },\r\n  { name: \"Minnesota\", abbr: \"MN\" },\r\n  { name: \"Mississippi\", abbr: \"MS\" },\r\n  { name: \"Missouri\", abbr: \"MO\" },\r\n  { name: \"Montana\", abbr: \"MT\" },\r\n  { name: \"Nebraska\", abbr: \"NE\" },\r\n  { name: \"Nevada\", abbr: \"NV\" },\r\n  { name: \"New Hampshire\", abbr: \"NH\" },\r\n  { name: \"New Jersey\", abbr: \"NJ\" },\r\n  { name: \"New Mexico\", abbr: \"NM\" },\r\n  { name: \"New York\", abbr: \"NY\" },\r\n  { name: \"North Carolina\", abbr: \"NC\" },\r\n  { name: \"North Dakota\", abbr: \"ND\" },\r\n  { name: \"Ohio\", abbr: \"OH\" },\r\n  { name: \"Oklahoma\", abbr: \"OK\" },\r\n  { name: \"Oregon\", abbr: \"OR\" },\r\n  { name: \"Pennsylvania\", abbr: \"PA\" },\r\n  { name: \"Rhode Island\", abbr: \"RI\" },\r\n  { name: \"South Carolina\", abbr: \"SC\" },\r\n  { name: \"South Dakota\", abbr: \"SD\" },\r\n  { name: \"Tennessee\", abbr: \"TN\" },\r\n  { name: \"Texas\", abbr: \"TX\" },\r\n  { name: \"Utah\", abbr: \"UT\" },\r\n  { name: \"Vermont\", abbr: \"VT\" },\r\n  { name: \"Virginia\", abbr: \"VA\" },\r\n  { name: \"Washington\", abbr: \"WA\" },\r\n  { name: \"West Virginia\", abbr: \"WV\" },\r\n  { name: \"Wisconsin\", abbr: \"WI\" },\r\n  { name: \"Wyoming\", abbr: \"WY\" },\r\n];\r\n"],"names":[],"mappings":";;;AAAO,MAAM,SAAS;IACpB;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAc,MAAM;IAAK;IACjC;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAe,MAAM;IAAK;IAClC;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAS,MAAM;IAAK;IAC5B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAQ,MAAM;IAAK;IAC3B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAa,MAAM;IAAK;IAChC;QAAE,MAAM;QAAS,MAAM;IAAK;IAC5B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAiB,MAAM;IAAK;IACpC;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAa,MAAM;IAAK;IAChC;QAAE,MAAM;QAAe,MAAM;IAAK;IAClC;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAiB,MAAM;IAAK;IACpC;QAAE,MAAM;QAAc,MAAM;IAAK;IACjC;QAAE,MAAM;QAAc,MAAM;IAAK;IACjC;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAkB,MAAM;IAAK;IACrC;QAAE,MAAM;QAAgB,MAAM;IAAK;IACnC;QAAE,MAAM;QAAQ,MAAM;IAAK;IAC3B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAgB,MAAM;IAAK;IACnC;QAAE,MAAM;QAAgB,MAAM;IAAK;IACnC;QAAE,MAAM;QAAkB,MAAM;IAAK;IACrC;QAAE,MAAM;QAAgB,MAAM;IAAK;IACnC;QAAE,MAAM;QAAa,MAAM;IAAK;IAChC;QAAE,MAAM;QAAS,MAAM;IAAK;IAC5B;QAAE,MAAM;QAAQ,MAAM;IAAK;IAC3B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAY,MAAM;IAAK;IAC/B;QAAE,MAAM;QAAc,MAAM;IAAK;IACjC;QAAE,MAAM;QAAiB,MAAM;IAAK;IACpC;QAAE,MAAM;QAAa,MAAM;IAAK;IAChC;QAAE,MAAM;QAAW,MAAM;IAAK;CAC/B","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/sky-seeker-starter/src/data/craigslistByState.ts"],"sourcesContent":["// Sample mapping for a few states; expand this with all Craigslist subdomains as needed\r\nexport const CRAIGSLIST_CITIES_BY_STATE: Record<string, {city: string, subdomain: string}[]> = {\r\n  CA: [\r\n    { city: \"Los Angeles\", subdomain: \"losangeles\" },\r\n    { city: \"SF Bay Area\", subdomain: \"sfbay\" },\r\n    { city: \"San Diego\", subdomain: \"sandiego\" },\r\n    { city: \"Sacramento\", subdomain: \"sacramento\" },\r\n    { city: \"Fresno\", subdomain: \"fresno\" },\r\n    { city: \"Inland Empire\", subdomain: \"inlandempire\" },\r\n    { city: \"Orange County\", subdomain: \"orangecounty\" },\r\n    { city: \"Ventura\", subdomain: \"ventura\" },\r\n    { city: \"Bakersfield\", subdomain: \"bakersfield\" },\r\n    { city: \"San Luis Obispo\", subdomain: \"slo\" },\r\n    // Add more as needed...\r\n  ],\r\n  WA: [\r\n    { city: \"Seattle-Tacoma\", subdomain: \"seattle\" },\r\n    { city: \"Spokane\", subdomain: \"spokane\" },\r\n    { city: \"Olympic Peninsula\", subdomain: \"olympic\" },\r\n    { city: \"Bellingham\", subdomain: \"bellingham\" },\r\n    { city: \"Yakima\", subdomain: \"yakima\" },\r\n    // Add more as needed...\r\n  ],\r\n  TX: [\r\n    { city: \"Austin\", subdomain: \"austin\" },\r\n    { city: \"Dallas/Fort Worth\", subdomain: \"dallas\" },\r\n    { city: \"Houston\", subdomain: \"houston\" },\r\n    { city: \"San Antonio\", subdomain: \"sanantonio\" },\r\n    { city: \"Corpus Christi\", subdomain: \"corpuschristi\" },\r\n    { city: \"El Paso\", subdomain: \"elpaso\" },\r\n    // Add more as needed...\r\n  ],\r\n  // ...add all states/subdomains for full coverage\r\n};\r\n"],"names":[],"mappings":"AAAA,wFAAwF;;;;AACjF,MAAM,6BAAkF;IAC7F,IAAI;QACF;YAAE,MAAM;YAAe,WAAW;QAAa;QAC/C;YAAE,MAAM;YAAe,WAAW;QAAQ;QAC1C;YAAE,MAAM;YAAa,WAAW;QAAW;QAC3C;YAAE,MAAM;YAAc,WAAW;QAAa;QAC9C;YAAE,MAAM;YAAU,WAAW;QAAS;QACtC;YAAE,MAAM;YAAiB,WAAW;QAAe;QACnD;YAAE,MAAM;YAAiB,WAAW;QAAe;QACnD;YAAE,MAAM;YAAW,WAAW;QAAU;QACxC;YAAE,MAAM;YAAe,WAAW;QAAc;QAChD;YAAE,MAAM;YAAmB,WAAW;QAAM;KAE7C;IACD,IAAI;QACF;YAAE,MAAM;YAAkB,WAAW;QAAU;QAC/C;YAAE,MAAM;YAAW,WAAW;QAAU;QACxC;YAAE,MAAM;YAAqB,WAAW;QAAU;QAClD;YAAE,MAAM;YAAc,WAAW;QAAa;QAC9C;YAAE,MAAM;YAAU,WAAW;QAAS;KAEvC;IACD,IAAI;QACF;YAAE,MAAM;YAAU,WAAW;QAAS;QACtC;YAAE,MAAM;YAAqB,WAAW;QAAS;QACjD;YAAE,MAAM;YAAW,WAAW;QAAU;QACxC;YAAE,MAAM;YAAe,WAAW;QAAa;QAC/C;YAAE,MAAM;YAAkB,WAAW;QAAgB;QACrD;YAAE,MAAM;YAAW,WAAW;QAAS;KAExC;AAEH","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/sky-seeker-starter/src/data/facebookByState.ts"],"sourcesContent":["// Sample mapping for a few states; expand this with all major Facebook Marketplace cities as needed\r\nexport const FACEBOOK_CITIES_BY_STATE: Record<string, string[]> = {\r\n  CA: [\r\n    \"Los Angeles, California\",\r\n    \"San Francisco, California\",\r\n    \"San Diego, California\",\r\n    \"Sacramento, California\",\r\n    \"Fresno, California\",\r\n    \"Irvine, California\",\r\n    // Add more as needed...\r\n  ],\r\n  WA: [\r\n    \"Seattle, Washington\",\r\n    \"Tacoma, Washington\",\r\n    \"Spokane, Washington\",\r\n    \"Bellevue, Washington\",\r\n    // Add more as needed...\r\n  ],\r\n  TX: [\r\n    \"Austin, Texas\",\r\n    \"Dallas, Texas\",\r\n    \"Houston, Texas\",\r\n    \"San Antonio, Texas\",\r\n    // Add more as needed...\r\n  ],\r\n  // ...add all states/cities for full coverage\r\n};\r\n"],"names":[],"mappings":"AAAA,oGAAoG;;;;AAC7F,MAAM,2BAAqD;IAChE,IAAI;QACF;QACA;QACA;QACA;QACA;QACA;KAED;IACD,IAAI;QACF;QACA;QACA;QACA;KAED;IACD,IAAI;QACF;QACA;QACA;QACA;KAED;AAEH","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///D:/GitHub/sky-seeker-starter/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { STATES } from \"../data/states\";\r\nimport { CRAIGSLIST_CITIES_BY_STATE } from \"../data/craigslistByState\";\r\nimport { FACEBOOK_CITIES_BY_STATE } from \"../data/facebookByState\";\r\n\r\n// Aircraft Types (with \"Projects\" added)\r\nconst AIRCRAFT_TYPES = [\r\n  { value: \"\", label: \"All Types\" },\r\n  { value: \"Single Engine Piston\", label: \"Single Engine Piston\" },\r\n  { value: \"Multi Engine Piston\", label: \"Multi Engine Piston\" },\r\n  { value: \"Turboprop\", label: \"Turboprop\" },\r\n  { value: \"Jet\", label: \"Jet\" },\r\n  { value: \"Helicopter\", label: \"Helicopter\" },\r\n  { value: \"Experimental\", label: \"Experimental\" },\r\n  { value: \"Light Sport\", label: \"Light Sport\" },\r\n  { value: \"Warbird\", label: \"Warbird\" },\r\n  { value: \"Glider\", label: \"Glider\" },\r\n  { value: \"Amphibious\", label: \"Amphibious\" },\r\n  { value: \"Ultralight\", label: \"Ultralight\" },\r\n  { value: \"Projects\", label: \"Projects\" },\r\n];\r\n\r\nconst STATE_OPTIONS = STATES.map(s => ({\r\n  value: s.abbr,\r\n  label: s.name\r\n}));\r\n\r\n// Helper functions\r\nfunction makeBarnstormersUrl({\r\n  brand,\r\n  model,\r\n  minPrice,\r\n  maxPrice,\r\n  stateAbbrs,\r\n}: {\r\n  brand: string;\r\n  model: string;\r\n  minPrice: string;\r\n  maxPrice: string;\r\n  stateAbbrs: string[];\r\n}) {\r\n  const params = [\r\n    `headline=`,\r\n    `body=`,\r\n    `part_num=`,\r\n    `mfg=${encodeURIComponent(brand || \"\")}`,\r\n    `model=${encodeURIComponent(model || \"\")}`,\r\n    `user__profile__company=`,\r\n    `user__last_name=`,\r\n    `user__first_name=`,\r\n    `user__profile__country=`,\r\n    `specialcase__state=${encodeURIComponent(stateAbbrs.join(\", \"))}`,\r\n    `user__profile__city=`,\r\n    `user__profile__uzip=`,\r\n    `specialcase__phone=`,\r\n    `user__email=`,\r\n    `my_cats__name=`,\r\n    `price__gte=${encodeURIComponent(minPrice || \"\")}`,\r\n    `price__lte=${encodeURIComponent(maxPrice || \"\")}`,\r\n    `search_type=advanced`,\r\n    `keyword=`,\r\n  ];\r\n  return \"https://www.barnstormers.com/cat_search.php?\" + params.join(\"&\");\r\n}\r\n\r\nfunction makeControllerUrl({\r\n  brand,\r\n  model,\r\n  type,\r\n  minPrice,\r\n  maxPrice,\r\n  stateNames,\r\n}: {\r\n  brand: string;\r\n  model: string;\r\n  type: string;\r\n  minPrice: string;\r\n  maxPrice: string;\r\n  stateNames: string[];\r\n}) {\r\n  const searchTerms = [brand, model, type].filter(Boolean).join(\" \");\r\n  let url = `https://www.controller.com/listings/search?keywords=${encodeURIComponent(searchTerms)}`;\r\n  if (minPrice || maxPrice) {\r\n    url += `&Price=${encodeURIComponent(`${minPrice || \"\"}*${maxPrice || \"\"}`)}`;\r\n  }\r\n  if (stateNames.length) {\r\n    url += `&State=${encodeURIComponent(stateNames.join(\"|\").toUpperCase())}`;\r\n  }\r\n  return url;\r\n}\r\n\r\nfunction buildSearchLinks({\r\n  brand,\r\n  model,\r\n  type,\r\n  minPrice,\r\n  maxPrice,\r\n  selectedStateAbbrs,\r\n}: {\r\n  brand: string;\r\n  model: string;\r\n  type: string;\r\n  minPrice: string;\r\n  maxPrice: string;\r\n  selectedStateAbbrs: string[];\r\n}): { name: string; url: string; note?: string }[] {\r\n  const abbrToName = Object.fromEntries(STATES.map(s => [s.abbr, s.name]));\r\n  const stateNames = selectedStateAbbrs.map(abbr => abbrToName[abbr]);\r\n  const stateAbbrs = selectedStateAbbrs;\r\n\r\n  const craigslistLinks = stateAbbrs.flatMap((abbr) =>\r\n    (CRAIGSLIST_CITIES_BY_STATE[abbr] || []).map(({ city, subdomain }) => {\r\n      let url = `https://${subdomain}.craigslist.org/search/sss?query=${encodeURIComponent(\r\n        [brand, model, type].filter(Boolean).join(\" \") + \" aircraft\"\r\n      )}`;\r\n      if (minPrice) url += `&min_price=${encodeURIComponent(minPrice)}`;\r\n      if (maxPrice) url += `&max_price=${encodeURIComponent(maxPrice)}`;\r\n      return {\r\n        name: `Craigslist (${city})`,\r\n        url,\r\n        note: \"\",\r\n      };\r\n    })\r\n  );\r\n\r\n  const facebookLinks = stateAbbrs.flatMap((abbr) =>\r\n    (FACEBOOK_CITIES_BY_STATE[abbr] || []).map((city) => {\r\n      let fbQuery = [brand, model, type].filter(Boolean).join(\" \") + \" aircraft\";\r\n      if (minPrice || maxPrice) {\r\n        fbQuery += ` $${minPrice || \"\"}${minPrice && maxPrice ? \"-\" : \"\"}${maxPrice || \"\"}`;\r\n      }\r\n      return {\r\n        name: `Facebook Marketplace (${city})`,\r\n        url: `https://www.facebook.com/marketplace/search/?query=${encodeURIComponent(\r\n          fbQuery\r\n        )}&location=${encodeURIComponent(city)}`,\r\n        note:\r\n          minPrice || maxPrice\r\n            ? \"Note: Facebook Marketplace does not support price filters in the URL. Please use the price filter on Facebook.\"\r\n            : \"\",\r\n      };\r\n    })\r\n  );\r\n\r\n  const barnstormersUrl = makeBarnstormersUrl({\r\n    brand,\r\n    model,\r\n    minPrice,\r\n    maxPrice,\r\n    stateAbbrs,\r\n  });\r\n\r\n  const keyword = [brand, model, type].filter(Boolean).join(\" \").trim();\r\n  let tradeAPlaneUrl = \"https://www.trade-a-plane.com/search?s-type=aircraft\";\r\n  if (keyword) {\r\n    tradeAPlaneUrl += `&s-keyword-search=${encodeURIComponent(keyword.replace(/\\s+/g, '+'))}`;\r\n    tradeAPlaneUrl += `&s-original-search=${encodeURIComponent(keyword)}`;\r\n  }\r\n  if (minPrice) {\r\n    tradeAPlaneUrl += `&price-min=${encodeURIComponent(minPrice)}`;\r\n  }\r\n  if (maxPrice) {\r\n    tradeAPlaneUrl += `&price-max=${encodeURIComponent(maxPrice)}`;\r\n  }\r\n\r\n  const controllerUrl = makeControllerUrl({\r\n    brand,\r\n    model,\r\n    type,\r\n    minPrice,\r\n    maxPrice,\r\n    stateNames,\r\n  });\r\n\r\n  return [\r\n    {\r\n      name: \"Barnstormers\",\r\n      url: barnstormersUrl,\r\n      note: \"\",\r\n    },\r\n    {\r\n      name: \"Trade-A-Plane\",\r\n      url: tradeAPlaneUrl,\r\n      note: \"\",\r\n    },\r\n    {\r\n      name: \"Controller\",\r\n      url: controllerUrl,\r\n      note: \"\",\r\n    },\r\n    ...craigslistLinks,\r\n    ...facebookLinks,\r\n  ];\r\n}\r\n\r\nexport default function HomePage() {\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [type, setType] = useState(\"\"); // value from AIRCRAFT_TYPES\r\n  const [minPrice, setMinPrice] = useState(\"\");\r\n  const [maxPrice, setMaxPrice] = useState(\"\");\r\n  const [selectedStates, setSelectedStates] = useState<{value: string, label: string}[]>([]);\r\n  const [showLinks, setShowLinks] = useState(false);\r\n\r\n  const handleSearch = () => setShowLinks(true);\r\n  const handleReset = () => {\r\n    setBrand(\"\");\r\n    setModel(\"\");\r\n    setType(\"\");\r\n    setMinPrice(\"\");\r\n    setMaxPrice(\"\");\r\n    setSelectedStates([]);\r\n    setShowLinks(false);\r\n  };\r\n\r\n  const searchLinks = buildSearchLinks({\r\n    brand,\r\n    model,\r\n    type,\r\n    minPrice,\r\n    maxPrice,\r\n    selectedStateAbbrs: selectedStates.map(s => s.value),\r\n  });\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4\">\r\n      {/* Header */}\r\n      <header className=\"flex items-center justify-center mb-8\">\r\n        <span className=\"text-blue-500 text-3xl mr-2\">✈️</span>\r\n        <span className=\"text-blue-600 text-4xl font-extrabold\">\r\n          Sky-Seeker\r\n        </span>\r\n      </header>\r\n\r\n      {/* Filter/Search Section */}\r\n      <div className=\"flex flex-col items-center\">\r\n        <div className=\"bg-white rounded-xl shadow p-6 w-full max-w-md mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4 text-center\">Search Every Hangar</h2>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Brand</label>\r\n              <input\r\n                className=\"border rounded px-2 py-1 w-full\"\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}\r\n                placeholder=\"e.g. Piper\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Model</label>\r\n              <input\r\n                className=\"border rounded px-2 py-1 w-full\"\r\n                value={model}\r\n                onChange={e => setModel(e.target.value)}\r\n                placeholder=\"e.g. Cherokee\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Aircraft Type</label>\r\n              <Select\r\n                options={AIRCRAFT_TYPES}\r\n                value={AIRCRAFT_TYPES.find(t => t.value === type) || AIRCRAFT_TYPES[0]}\r\n                onChange={o => setType(o?.value || \"\")}\r\n                isSearchable\r\n                className=\"w-full\"\r\n                classNamePrefix=\"react-select\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"flex-1\">\r\n                <label className=\"block font-semibold mb-1\">Min Price</label>\r\n                <div className=\"relative\">\r\n                  <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-gray-400\">$</span>\r\n                  <input\r\n                    className=\"border rounded pl-6 pr-2 py-1 w-full\"\r\n                    value={minPrice}\r\n                    onChange={e => setMinPrice(e.target.value)}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    placeholder=\"0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <label className=\"block font-semibold mb-1\">Max Price</label>\r\n                <div className=\"relative\">\r\n                  <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-gray-400\">$</span>\r\n                  <input\r\n                    className=\"border rounded pl-6 pr-2 py-1 w-full\"\r\n                    value={maxPrice}\r\n                    onChange={e => setMaxPrice(e.target.value)}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    placeholder=\"100000\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">State(s):</label>\r\n              <Select\r\n                options={STATE_OPTIONS}\r\n                value={selectedStates}\r\n                onChange={opts => setSelectedStates(opts as {value: string, label: string}[])}\r\n                isMulti\r\n                isSearchable\r\n                placeholder=\"Select state(s)...\"\r\n                className=\"w-full\"\r\n                classNamePrefix=\"react-select\"\r\n                closeMenuOnSelect={false}\r\n                hideSelectedOptions={false}\r\n              />\r\n              <div className=\"text-xs text-gray-500 mt-1\">\r\n                You can search and select multiple states.\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-3 justify-center mt-2\">\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 px-4 py-2 rounded-lg font-semibold transition\"\r\n                type=\"button\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={handleSearch}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-xl text-lg font-bold shadow transition\"\r\n                style={{ minWidth: \"180px\" }}\r\n                type=\"button\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Search Links */}\r\n        {showLinks && (\r\n          <section className=\"mt-8 bg-white rounded-xl shadow p-6 w-full max-w-lg\">\r\n            <h3 className=\"text-lg font-bold mb-4 text-center\">\r\n              Search Results on Major Sites\r\n            </h3>\r\n            <ul className=\"space-y-3 max-h-[600px] overflow-y-auto\">\r\n              {searchLinks.map((link) => (\r\n                <li key={link.url}>\r\n                  <a\r\n                    href={link.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"block bg-yellow-400 hover:bg-yellow-500 text-white rounded-lg px-4 py-2 font-semibold text-center transition\"\r\n                  >\r\n                    {link.name}\r\n                  </a>\r\n                  {link.note && link.note !== \"\" && (\r\n                    <div className=\"text-xs text-red-500 mt-1 text-center\">\r\n                      {link.note}\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"text-xs text-gray-400 mt-4 text-center\">\r\n              Craigslist and Facebook links are provided for every major city/metro area in your selected state(s).\r\n              <br />\r\n              <span className=\"text-red-500\">\r\n                Facebook Marketplace does not currently support price filters in the search URL; please use the price filter on Facebook after clicking the link.\r\n              </span>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}